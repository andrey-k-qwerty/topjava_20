Index: src/main/java/ru/javawebinar/topjava/repository/MealRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/MealRepository.java	(revision 14844ee4df322707eb130b05e42b3a3cd2712b99)
+++ src/main/java/ru/javawebinar/topjava/repository/MealRepository.java	(date 1593039116147)
@@ -19,5 +19,5 @@
     List<Meal> getAll(int userId);
 
     // ORDERED dateTime desc
-    List<Meal> getBetweenHalfOpen(LocalDateTime startDate, LocalDateTime endDate, int userId);
+    List<Meal> getBetweenHalfOpen(LocalDateTime startDateTime, LocalDateTime endDateTime, int userId);
 }
Index: src/test/java/ru/javawebinar/topjava/web/user/InMemoryAdminRestControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/web/user/InMemoryAdminRestControllerTest.java	(revision 14844ee4df322707eb130b05e42b3a3cd2712b99)
+++ src/test/java/ru/javawebinar/topjava/web/user/InMemoryAdminRestControllerTest.java	(date 1593039196827)
@@ -10,6 +10,7 @@
 
 import java.util.Arrays;
 
+import static ru.javawebinar.topjava.UserTestData.NOT_FOUND;
 import static ru.javawebinar.topjava.UserTestData.USER_ID;
 
 public class InMemoryAdminRestControllerTest {
@@ -46,6 +47,6 @@
 
     @Test
     public void deleteNotFound() throws Exception {
-        Assert.assertThrows(NotFoundException.class, () -> controller.delete(10));
+        Assert.assertThrows(NotFoundException.class, () -> controller.delete(NOT_FOUND));
     }
 }
\ No newline at end of file
Index: src/main/resources/db/populateDB.sql
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/resources/db/populateDB.sql	(revision 14844ee4df322707eb130b05e42b3a3cd2712b99)
+++ src/main/resources/db/populateDB.sql	(date 1593039196823)
@@ -2,10 +2,10 @@
 DELETE FROM users;
 ALTER SEQUENCE global_seq RESTART WITH 100000;
 
-INSERT INTO users (name, email, password) VALUES
-  ('User', 'user@yandex.ru', 'password'),
-  ('Admin', 'admin@gmail.com', 'admin');
+INSERT INTO users (name, email, password)
+VALUES ('User', 'user@yandex.ru', 'password'),
+       ('Admin', 'admin@gmail.com', 'admin');
 
-INSERT INTO user_roles (role, user_id) VALUES
-  ('ROLE_USER', 100000),
-  ('ROLE_ADMIN', 100001);
+INSERT INTO user_roles (role, user_id)
+VALUES ('USER', 100000),
+       ('ADMIN', 100001);
Index: src/main/java/ru/javawebinar/topjava/repository/jdbc/JdbcMealRepository.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/repository/jdbc/JdbcMealRepository.java	(revision 14844ee4df322707eb130b05e42b3a3cd2712b99)
+++ src/main/java/ru/javawebinar/topjava/repository/jdbc/JdbcMealRepository.java	(date 1593039196820)
@@ -31,7 +31,7 @@
     }
 
     @Override
-    public List<Meal> getBetweenHalfOpen(LocalDateTime startDate, LocalDateTime endDate, int userId) {
+    public List<Meal> getBetweenHalfOpen(LocalDateTime startDateTime, LocalDateTime endDateTime, int userId) {
         return null;
     }
 }
Index: src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(revision 14844ee4df322707eb130b05e42b3a3cd2712b99)
+++ src/test/java/ru/javawebinar/topjava/service/UserServiceTest.java	(date 1593039273059)
@@ -11,12 +11,10 @@
 import org.springframework.test.context.junit4.SpringRunner;
 import ru.javawebinar.topjava.model.Role;
 import ru.javawebinar.topjava.model.User;
-import ru.javawebinar.topjava.repository.UserRepository;
 import ru.javawebinar.topjava.util.exception.NotFoundException;
 
 import java.util.List;
 
-import static org.junit.Assert.assertNull;
 import static org.junit.Assert.assertThrows;
 import static ru.javawebinar.topjava.UserTestData.*;
 
@@ -37,9 +35,6 @@
     @Autowired
     private UserService service;
 
-    @Autowired
-    private UserRepository repository;
-
     @Test
     public void create() throws Exception {
         User newUser = getNew();
@@ -59,7 +54,7 @@
     @Test
     public void delete() throws Exception {
         service.delete(USER_ID);
-        assertNull(repository.get(USER_ID));
+        assertThrows(NotFoundException.class, () -> service.get(USER_ID));
     }
 
     @Test
