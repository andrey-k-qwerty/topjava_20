Index: src/main/java/ru/javawebinar/topjava/web/user/AdminRestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/user/AdminRestController.java	(revision 2a875a64aa9911873dab37d3233c0b150b9951b7)
+++ src/main/java/ru/javawebinar/topjava/web/user/AdminRestController.java	(date 1595463453175)
@@ -1,40 +1,57 @@
 package ru.javawebinar.topjava.web.user;
 
-import org.springframework.stereotype.Controller;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.http.ResponseEntity;
+import org.springframework.web.bind.annotation.*;
+import org.springframework.web.servlet.support.ServletUriComponentsBuilder;
 import ru.javawebinar.topjava.model.User;
 
+import java.net.URI;
 import java.util.List;
 
-@Controller
+@RestController
+@RequestMapping(value = AdminRestController.REST_URL, produces = MediaType.APPLICATION_JSON_VALUE)
 public class AdminRestController extends AbstractUserController {
 
-    @Override
+    static final String REST_URL = "/rest/admin/users";
+
+    @GetMapping
     public List<User> getAll() {
         return super.getAll();
     }
 
     @Override
-    public User get(int id) {
+    @GetMapping("/{id}")
+    public User get(@PathVariable int id) {
         return super.get(id);
     }
 
+    @PostMapping(consumes = MediaType.APPLICATION_JSON_VALUE)
+    public ResponseEntity<User> createWithLocation(@RequestBody User user) {
+        User created = super.create(user);
+        URI uriOfNewResource = ServletUriComponentsBuilder.fromCurrentContextPath()
+                .path(REST_URL + "/{id}")
+                .buildAndExpand(created.getId()).toUri();
+        return ResponseEntity.created(uriOfNewResource).body(created);
+    }
+
     @Override
-    public User create(User user) {
-        return super.create(user);
-    }
-
-    @Override
-    public void delete(int id) {
+    @DeleteMapping("/{id}")
+    @ResponseStatus(HttpStatus.NO_CONTENT)
+    public void delete(@PathVariable int id) {
         super.delete(id);
     }
 
     @Override
-    public void update(User user, int id) {
+    @PutMapping(value = "/{id}", consumes = MediaType.APPLICATION_JSON_VALUE)
+    @ResponseStatus(value = HttpStatus.NO_CONTENT)
+    public void update(@RequestBody User user, @PathVariable int id) {
         super.update(user, id);
     }
 
-    @Override
-    public User getByMail(String email) {
+    @GetMapping("/by")
+    public User getByMail(@RequestParam String email) {
         return super.getByMail(email);
     }
 }
\ No newline at end of file
Index: src/main/java/ru/javawebinar/topjava/web/user/ProfileRestController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/ru/javawebinar/topjava/web/user/ProfileRestController.java	(revision 2a875a64aa9911873dab37d3233c0b150b9951b7)
+++ src/main/java/ru/javawebinar/topjava/web/user/ProfileRestController.java	(date 1595463453181)
@@ -1,22 +1,31 @@
 package ru.javawebinar.topjava.web.user;
 
-import org.springframework.stereotype.Controller;
+import org.springframework.http.HttpStatus;
+import org.springframework.http.MediaType;
+import org.springframework.web.bind.annotation.*;
 import ru.javawebinar.topjava.model.User;
 
 import static ru.javawebinar.topjava.web.SecurityUtil.authUserId;
 
-@Controller
+@RestController
+@RequestMapping(ProfileRestController.REST_URL)
 public class ProfileRestController extends AbstractUserController {
+    static final String REST_URL = "/rest/profile";
 
+    @GetMapping(produces = MediaType.APPLICATION_JSON_VALUE)
     public User get() {
         return super.get(authUserId());
     }
 
+    @DeleteMapping
+    @ResponseStatus(HttpStatus.NO_CONTENT)
     public void delete() {
         super.delete(authUserId());
     }
 
-    public void update(User user) {
+    @PutMapping(consumes = MediaType.APPLICATION_JSON_VALUE)
+    @ResponseStatus(HttpStatus.NO_CONTENT)
+    public void update(@RequestBody User user) {
         super.update(user, authUserId());
     }
 }
\ No newline at end of file
